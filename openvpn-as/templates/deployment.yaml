apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        io.kubernetes.cri-o.Devices: "/dev/fuse,/dev/net/tun"
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - image: {{ .Values.registry }}/{{ .Values.namespace}}/{{ .Values.image }}:latest
        imagePullPolicy: Always
        name: openvpn-server
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext: 
          privileged: false
          runAsUser: 1001
          capabilities:
            add: ["NET_ADMIN", "MKNOD", "NET_RAW", "NET_BIND_SERVICE","SETUID", "SETGID"]
        command:
          - "openvpn"
          - "--cd"
          - "/openvpn-logs"
          - "--config"
          - "/etc/openvpn/server.conf"
        volumeMounts:
        - mountPath: /etc/openvpn/server
          name: openvpn-secret
        - mountPath: /etc/openvpn/server.conf
          name: openvpn-cm
          subPath: server.conf
        - mountPath: /openvpn-logs
          name: logs
      volumes:
      - name: openvpn-secret
        secret:
          secretName: openvpn
      - name: openvpn-cm
        configMap:
          name: openvpn
      - name: logs
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      serviceAccountName: openvpn-as